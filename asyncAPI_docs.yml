asyncapi: 2.0.0
info:
  title: Cleaning Robot CHRSS API
  version: '1.0.0'
  description: |
    A smart cleaning robot that be controlled remotely to clean and mop

    ### Check out some of its features:

    * Zonal cleaning
    * Cleaning scheduling
    * Automatic empty system
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  production:
    url: localhost:{port}
    protocol: mqtt
    description: The mosquitto MQTT broker
    variables:
      port:
        description: The port on which the mqtt broker runs
        default: '1883'
        enum:
          - '1883'

defaultContentType: application/json

channels:
  robot/status:
    description: Topic that entails robot status
    subscribe:
      summary: Receive information about robot status
      operationId: emitRobotStatus
      message:
        $ref: '#/components/messages/robotStatus'



components:
  messages:
    robotStatus:
      name: robotStatus
      title: Robot Status
      summary: Inform about robot status
      contentType: application/json
      payload:
        $ref: '#/components/schemas/status'

  schemas:
    status:
      type: object
      properties:
        air:
          type: object
          description: 'Air quality'
          properties:
            id:
              type: integer
              description: 'Id of the air entry'
            timestamp:
              type: string
              format: date
              description: 'Date of entry insert'
            value:
              type: number
              description: 'Value of air quality'
        cleaning:
          type: integer
          description: |
            Current operation mode of the robot
            0 - vacuuming
            1 - mopping
            2 - resting
        settings:
          type: object
          description: 'Settings of current cleaning mode'
          properties:
            id:
              type: integer
              description: 'Id of the settings entry'
            timestamp:
              type: string
              format: date
              description: 'Date of entry insert'
            frequency:
              type: integer
              description: 'Frequency of motor actuators'
        bin_level:
          type: object
          description: 'Bin level data'
          properties:
            id:
              type: integer
              description: 'Id of the bin_level entry'
            timestamp:
              type: string
              format: date
              description: 'Date of entry insert'
            value:
              type: number
              description: 'Bin level'
        resource_level:
          type: object
          description: 'Resource level data'
          properties:
            id:
              type: integer
              description: 'Id of the resource_level entry'
            timestamp:
              type: string
              format: date
              description: 'Date of entry insert'
            value:
              type: number
              description: 'Resources percentages'
        battery_level:
          type: object
          description: 'Battery level data'
          properties:
            id:
              type: integer
              description: 'Id of the battery_level entry'
            timestamp:
              type: string
              format: date
              description: 'Date of entry insert'
            value:
              type: number
              description: 'Battery percentage'
